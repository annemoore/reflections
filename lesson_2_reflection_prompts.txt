What happens when you initialize a repository? Why do you need to do it?

The folder turns into a git repository where you can save commits. You need
to do it to save versions of the files in the folder and presumably to share
them with others through github.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is an intermediate place where you can place files from the
working directory before committing them to the repository. It allows you to not
save all files in the working directory to a single commit. It also lets you
slowly choose the files you want to place in a commit rather than choose them
all at once.

How can you use the staging area to make sure you have one commit per logical
change?

You can place only the files that include one logical change in the the staging
area. If you made two logical changes (in different files), then only place one
in the staging area before making a commit, and then do the second in a different
commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches would be helpful when you want to try out a new version of a program
or add a new feature, but still keep a working version without the new 
additions. Branches let you have a numbers of different versions, to each of which
you can keep on making changes. Without branches, you would have to remember 
different commit numbers for different versions, and it would be trickier to keep
changing each version.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
